From: Robert Schwebel <r.schwebel@pengutronix.de>
Subject: [PATCH] qmake: avoid host path leakage while building with INSTALL_ROOT

When building with INSTALL_ROOT (i.e. for cross compilation), qmake
nevertheless generates a 'sed' expression to replace the local build
path by /usr/{lib,include}. If we now assume an application which uses
qmake to compile&link against the freshly installed, we observe an
occurence of "-L/usr/lib" in the generated Makefiles. This may
accidently work on developer machines where people often have another
copy of Qt in that place, but fails for example badly while cross
compiling.

The patch below fixes it by adding $(INSTALL_ROOT) to the replacement
path. If set during 'make install', it will be used instead of the plain
prefix.

Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>

---
 qmake/generators/unix/unixmake.cpp |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

Index: qt-embedded-linux-opensource-src-4.5.0/qmake/generators/unix/unixmake.cpp
===================================================================
--- qt-embedded-linux-opensource-src-4.5.0.orig/qmake/generators/unix/unixmake.cpp
+++ qt-embedded-linux-opensource-src-4.5.0/qmake/generators/unix/unixmake.cpp
@@ -840,7 +840,7 @@ UnixMakefileGenerator::defaultInstall(co
                         const QString match = project->first(replace_rules.at(r) + ".match"),
                                     replace = project->first(replace_rules.at(r) + ".replace");
                         if(!match.isEmpty() /*&& match != replace*/)
-                            ret += " -e \"s," + match + "," + replace + ",g\"";
+                            ret += " -e \"s," + match + ",$(INSTALL_ROOT)" + replace + ",g\"";
                     }
                     ret += " \"" + src_meta + "\" >\"" + dst_meta + "\"";
                     //ret += " || " + install_meta;
