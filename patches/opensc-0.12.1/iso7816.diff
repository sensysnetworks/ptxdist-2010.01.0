diff --git a/src/libopensc/iso7816.c b/src/libopensc/iso7816.c
index e07f546..5ccb6e4 100644
--- a/src/libopensc/iso7816.c
+++ b/src/libopensc/iso7816.c
@@ -433,6 +433,11 @@ static int iso7816_select_file(sc_card_t *card,
 		apdu.p1 = 0;
 		if (pathlen != 2)
 			return SC_ERROR_INVALID_ARGUMENTS;
+		if (memcmp(path, "\x3F\x00", 2) == 0) {
+			apdu.cse = 2;
+			path += 2;
+			pathlen -= 2;
+		}
 		break;
 	case SC_PATH_TYPE_DF_NAME:
 		apdu.p1 = 4;
@@ -461,8 +466,12 @@ static int iso7816_select_file(sc_card_t *card,
 	}
 	apdu.p2 = 0;		/* first record, return FCI */
 	apdu.lc = pathlen;
-	apdu.data = path;
 	apdu.datalen = pathlen;
+	if (apdu.datalen > 0) {
+		apdu.data = path;
+	} else {
+		apdu.data = 0L;
+	}
 
 	if (file_out != NULL) {
 		apdu.resp = buf;
@@ -545,18 +554,53 @@ static int iso7816_construct_fci(sc_card_t *card, const sc_file_t *file,
 
 	if (*outlen < 2)
 		return SC_ERROR_BUFFER_TOO_SMALL;
-	*p++ = 0x6F;
+	*p++ = 0x62;
 	p++;
 	
+
 	buf[0] = (file->size >> 8) & 0xFF;
 	buf[1] = file->size & 0xFF;
-	sc_asn1_put_tag(0x81, buf, 2, p, *outlen - (p - out), &p);
+	sc_asn1_put_tag(0x80, buf, 2, p, *outlen - (p - out), &p);
 
 	if (file->type_attr_len) {
 		assert(sizeof(buf) >= file->type_attr_len);
 		memcpy(buf, file->type_attr, file->type_attr_len);
 		sc_asn1_put_tag(0x82, buf, file->type_attr_len,
 				p, *outlen - (p - out), &p);
+	} else if ( (file->id & 0xffff) == 0x0080 ) {
+		u8 * x = &buf[0];
+
+		*x++ = 0xc;
+		*x++ = 1;
+		*x++ = 0;
+		*x++ = 0x12;
+		*x++ = 0x1;
+		sc_asn1_put_tag(0x82, buf, (x - buf),
+				p, *outlen - (p - out), &p);
+
+		/* sec */
+		x = &buf[0];
+		*x++ = 0x6b;
+		*x++ = 0xff;
+		*x++ = 0xff;
+		*x++ = 0xff;
+		*x++ = 0xff;
+		*x++ = 0xff;
+		sc_asn1_put_tag(0x8c, buf, (x - buf),
+				p, *outlen - (p - out), &p);
+
+
+		/* short id */
+		x = &buf[0];
+		*x++ = 0x01;
+		sc_asn1_put_tag(0x88, buf, (x - buf),
+				p, *outlen - (p - out), &p);
+
+		/* life cycle */
+		x = &buf[0];
+		*x++ = 0x01;
+		sc_asn1_put_tag(0x8a, buf, (x - buf),
+				p, *outlen - (p - out), &p);
 	} else {
 		buf[0] = file->shareable ? 0x40 : 0;
 		switch (file->type) {
@@ -566,13 +610,18 @@ static int iso7816_construct_fci(sc_card_t *card, const sc_file_t *file,
 			buf[0] |= file->ef_structure & 7;
 			break;
 		case SC_FILE_TYPE_DF:
-			buf[0] |= 0x38;
+			if ((file->id &0xffff) == 0x3f00) {
+				buf[0] |= 0x3f;
+			} else {
+				buf[0] |= 0x38;
+			}
 			break;
 		default:
 			return SC_ERROR_NOT_SUPPORTED;
 		}
 		sc_asn1_put_tag(0x82, buf, 1, p, *outlen - (p - out), &p);
 	}
+
 	buf[0] = (file->id >> 8) & 0xFF;
 	buf[1] = file->id & 0xFF;
 	sc_asn1_put_tag(0x83, buf, 2, p, *outlen - (p - out), &p);
