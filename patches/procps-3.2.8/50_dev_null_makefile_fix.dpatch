#! /bin/sh /usr/share/dpatch/dpatch-run
## dev_null_makefile_fix.dpatch by  <xaiki@gonzo>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Make sure Makefile doesnt zot random files while checking GCC

@DPATCH@
diff -urNad procps-3.2.6~/Makefile procps-3.2.6/Makefile
--- procps-3.2.6~/Makefile	2005-10-30 07:27:04.000000000 +0100
+++ procps-3.2.6/Makefile	2005-12-20 02:57:41.000000000 +0100
@@ -119,7 +119,7 @@
 # Unlike the kernel one, this check_gcc goes all the way to
 # producing an executable. There might be a -m64 that works
 # until you go looking for a 64-bit curses library.
-check_gcc = $(shell if $(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) dummy.c $(ALL_LDFLAGS) $(1) -o /dev/null $(CURSES) > /dev/null 2>&1; then echo "$(1)"; else echo "$(2)"; fi ;)
+check_gcc = $(shell if $(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) dummy.c $(ALL_LDFLAGS) $(1) -o will_this_file_really_exist.tmp $(CURSES) > /dev/null 2>&1; then echo "$(1)"; else echo "$(2)"; fi ; rm -f will_this_file_really_exist.tmp)
 
 # Be 64-bit if at all possible. In a cross-compiling situation, one may
 # do "make m64=-m32 lib64=lib" to produce 32-bit executables. DO NOT
