From f33a64fe457ccfe74f5d993d025a71ebf7a417c4 Mon Sep 17 00:00:00 2001
From: maximilian attems <max@stro.at>
Date: Fri, 5 Sep 2008 22:02:21 +0200
Subject: [PATCH 05/21] [klibc] mount: list all mounted file systems

plain mount(8) invocation without arguments.

Signed-off-by: maximilian attems <max@stro.at>
---
 usr/utils/mount_main.c |   32 ++++++++++++++++++++++++++++++++
 1 files changed, 32 insertions(+), 0 deletions(-)

diff --git a/usr/utils/mount_main.c b/usr/utils/mount_main.c
index a15ae3d..2616e46 100644
--- a/usr/utils/mount_main.c
+++ b/usr/utils/mount_main.c
@@ -7,9 +7,13 @@
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
+#include <mntent.h>
 
 #include "mount_opts.h"
 
+#define _PATH_MOUNTED		"/etc/mtab"
+#define _PATH_PROC_MOUNTS	"/proc/mounts"
+
 char *progname;
 
 static struct extra_opts extra;
@@ -22,6 +26,31 @@ static __noreturn usage(void)
 	exit(1);
 }
 
+static __noreturn print_mount(void)
+{
+	FILE *mfp;
+	struct mntent *mnt;
+
+	mfp = setmntent(_PATH_MOUNTED, "r");
+	if (!mfp)
+		mfp = setmntent(_PATH_PROC_MOUNTS, "r");
+	if (!mfp)
+		perror("setmntent");
+
+	while ((mnt = getmntent(mfp)) != NULL) {
+		if (mnt->mnt_fsname && !strncmp(mnt->mnt_fsname, "no", 2))
+			continue;
+		printf("%s on %s", mnt->mnt_fsname, mnt->mnt_dir);
+		if (mnt->mnt_type != NULL && mnt->mnt_type != '\0')
+			printf (" type %s", mnt->mnt_type);
+		if (mnt->mnt_opts != NULL && mnt->mnt_opts != '\0')
+			printf (" (%s)", mnt->mnt_opts);
+		printf("\n");
+	}
+	endmntent(mfp);
+	exit(0);
+}
+
 static int
 do_mount(char *dev, char *dir, char *type, unsigned long rwflag, void *data)
 {
@@ -114,6 +143,9 @@ int main(int argc, char *argv[])
 	if (rwflag & MS_TYPE)
 		type = "none";
 
+	if (optind == argc)
+		print_mount();
+
 	if (optind + 2 != argc || type == NULL)
 		usage();
 
-- 
1.6.5

